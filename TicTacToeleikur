package ticTacToe;

import edu.princeton.cs.introcs.In;
import edu.princeton.cs.introcs.StdIn;
import edu.princeton.cs.introcs.StdOut;

public class TicTacToe {
	
	private static char board[][];
	
	private char player1Move;
	
	private char player2Move;
	
	private static int level;
	
	private static boolean won;
	
	public TicTacToe(){
		
		board = new char[4][4];
		player1Move = 'x';
		player2Move = 'o';
		clearBoard();
		level = 0;
		won = false;
		
	}
	
	public void clearBoard()
	{
		for(int i = 1; i < 4; i++)
		{
			for(int j = 1; j < 4; j++)
			{
				board[i][j] = '-';
			}
		}
	}
	
	public void PrintTheBoard()
	{
		
		System.out.println("--------");
		
		for(int i = 1; i < 4; i ++)
		{
			System.out.print("|");
			
			for(int j = 1; j < 4; j++)
			{
				System.out.print(board[i][j] + "|");
				
			}
			System.out.println();
		}
		
		System.out.println("--------");
	}
	
	public void placeMark()
	{
		In read = new In();
		
		int x = read.readInt();
		int y = read.readInt();
		
		if(level % 2 == 1){
		if(x <= 3 && x >= 0 )
		{
			if(y <= 3 && y >= 0)
			{
				if(board[x][y] == '-')
				{
					board[x][y] = player1Move;
					
				}
				else
				{
					System.out.println("choose another spot");
					placeMark();
				}
			}
		}
	}
		if(level % 2 == 0)
		{
			if(x <= 3 && x >= 0 )
			{
				if(y <= 3 && y >= 0)
				{
					if(board[x][y] == '-')
					{
						board[x][y] = player2Move;
						
					}
					else
					{
						System.out.println("choose another spot");
						placeMark();
					}
				}
			}
		}
	}
	
	public void Turn()
	{
		if(level % 2 == 1 && won != true)
		{
			System.out.println("player two move");
		}
		if(level % 2 == 0 && won != true)
		{
			System.out.println("player one move");
		}
	}
	
	public void chekIfWon()
	{
		if(board[1][1] == player1Move && board[1][2] == player1Move && board[1][3] == player1Move )
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		if(board[2][1] == player1Move && board[2][2] == player1Move && board[2][3] == player1Move )
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		if(board[3][1] == player1Move && board[3][2] == player1Move && board[3][3] == player1Move)
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		if(board[1][1] == player1Move && board[2][2] == player1Move && board[3][3] == player1Move)
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		if(board[1][3] == player1Move && board[2][2] == player1Move && board[3][1] == player1Move)
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		
		if(board[1][1] == player1Move && board[2][1] == player1Move && board[3][1] == player1Move)
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		if(board[1][2] == player1Move && board[2][2] == player1Move && board[3][2] == player1Move)
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		if(board[1][3] == player1Move && board[2][3] == player1Move && board[3][3] == player1Move)
		{
			System.out.println("player one wins");
			won = true;
			System.exit(0);
		}
		
		
		
		
		
		if(board[1][1] == player2Move && board[1][2] == player2Move && board[1][3] == player2Move )
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[2][1] == player2Move && board[2][2] == player2Move && board[2][3] == player2Move )
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[3][1] == player2Move && board[3][2] == player2Move && board[3][3] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[1][1] == player2Move && board[2][2] == player2Move && board[3][3] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[1][3] == player2Move && board[2][2] == player2Move && board[3][1] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[1][3] == player2Move && board[2][2] == player2Move && board[3][1] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		
		if(board[1][1] == player2Move && board[2][1] == player2Move && board[3][1] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[1][2] == player2Move && board[2][2] == player2Move && board[3][2] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
		if(board[1][3] == player2Move && board[2][3] == player2Move && board[3][3] == player2Move)
		{
			System.out.println("player two wins");
			won = true;
			//System.exit(0);
		}
	}
	
	public boolean isBoardFull()
	{
		for(int i = 1; i < 4; i++)
		{
			for(int j = 1; j < 4; j++)
			{
				if(board[i][j] == '-')
				{
					return false;
				}
			}
		}
		return true;
	}
	
	
	public static void main(String[] args) {
		
		 
		 TicTacToe game = new  TicTacToe();
		 
		 game.PrintTheBoard();
		 
		 game.clearBoard();
		 
		 System.out.println("player one move");
	
		 while(won != true)
		 {
			 level ++;
			 game.placeMark();
			 
			 game.PrintTheBoard();
			 
			 game.chekIfWon();
			 
			 if(game.isBoardFull() && won != true)
			 {
				 System.out.println("it's a tie!");
				 System.exit(0);
			 }
			 
			 game.Turn();
			 
		}
	}
	 

}